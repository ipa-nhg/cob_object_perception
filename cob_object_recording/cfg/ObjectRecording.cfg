#!/usr/bin/env python
PACKAGE = "cob_object_recording"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("pan_divisions", int_t, 0, "The number of images that need to be recorded along the pan direction around the object at every tilt level, pan=[0...360].", 12, 1, 288)
gen.add("tilt_divisions", int_t, 0, "the number of images that need to be recorded along the tilt direction around the object at every pan level, tilt=[0...-90], i.e. only the upper hemisphere.", 3, 1, 72)
gen.add("preferred_recording_distance", double_t, 0, "The desired camera distance to object while recording in [m].", .9, 0.1, 10.)
gen.add("distance_threshold_translation", double_t, 0, "Images get only recorded if the camera is closer to the target perspective than this length (in [m]).", .08, 0., 1.)
gen.add("distance_threshold_orientation", double_t, 0, "Images get only recorded if the camera orientation is closer to the target perspective than this angle (in degree).", 8., 0., 180.)
gen.add("sharpness_threshold", double_t, 0, "Threshold for the image sharpness, images with lower sharpness are not utilized for data recording.", .8, 0., 1.)
gen.add("xyzr_recording_bounding_box_x", double_t, 0, "val[0] of (maximum) bounding box for the recorded object, i.e. the bounding box may be specified too big (val[0]=half length, val[1]=half width, val[2]=full height, val[3]=offset to minimal height 0 (to exclude outliers of the ground plane)).", .14, 0., 10.)
gen.add("xyzr_recording_bounding_box_y", double_t, 0, "val[1] of (maximum) bounding box for the recorded object, i.e. the bounding box may be specified too big (val[0]=half length, val[1]=half width, val[2]=full height, val[3]=offset to minimal height 0 (to exclude outliers of the ground plane)).", .07, 0., 10.)
gen.add("xyzr_recording_bounding_box_z", double_t, 0, "val[2] of (maximum) bounding box for the recorded object, i.e. the bounding box may be specified too big (val[0]=half length, val[1]=half width, val[2]=full height, val[3]=offset to minimal height 0 (to exclude outliers of the ground plane)).", .3, 0., 10.)
gen.add("xyzr_recording_bounding_box_r", double_t, 0, "val[3] of (maximum) bounding box for the recorded object, i.e. the bounding box may be specified too big (val[0]=half length, val[1]=half width, val[2]=full height, val[3]=offset to minimal height 0 (to exclude outliers of the ground plane)).", .02, 0., 10.)
gen.add("data_storage_path", str_t, 0, "Folder for storing the recorded data (if kept empty, the .ros/cob_object_recording subfolder in your home directory will be used).", "")


#gen.add("int_param", int_t, 0, "An Integer parameter", 50, 0, 100)
#gen.add("double_param", double_t, 0, "A double parameter", .5, 0, 1)
#gen.add("str_param", str_t, 0, "A string parameter", "Hello World")
#gen.add("bool_param", bool_t, 0, "A Boolean parameter", True)

#size_enum = gen.enum([ gen.const("Small", int_t, 0, "A small constant"),
#                  gen.const("Medium", int_t, 1, "A medium constant"),
#                  gen.const("Large", int_t, 2, "A large constant"),
#                  gen.const("ExtraLarge", int_t, 3, "An extra large constant") ],
#                  "An enum to set size")

#gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "cob_object_recording", "ObjectRecording"))
